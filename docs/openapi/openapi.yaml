openapi: 3.0.0
info:
  title: User and Task Management API
  version: 1.0.0
  description: API for managing users and their tasks

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          $ref: '#/components/responses/HealthCheck'

  /users:
    get:
      summary: List all users
      responses:
        '200':
          $ref: '#/components/responses/UserList'
    post:
      summary: Create a new user
      requestBody:
        $ref: '#/components/requestBodies/UserInput'
      responses:
        '201':
          $ref: '#/components/responses/UserCreated'

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/User'
    put:
      summary: Update a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/UserInput'
      responses:
        '200':
          $ref: '#/components/responses/User'
    delete:
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          $ref: '#/components/responses/NoContent'

  /users/{id}/tasks:
    get:
      summary: List all tasks for a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/TaskList'
    post:
      summary: Create a new task for a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/TaskInput'
      responses:
        '201':
          $ref: '#/components/responses/TaskCreated'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        age:
          type: integer
      required:
        - id
        - email
        - name
        - age

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
      required:
        - id
        - title
        - description

  requestBodies:
    UserInput:
      description: User input for create and update operations
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              name:
                type: string
              age:
                type: integer
            required:
              - email
              - name
              - age

    TaskInput:
      description: Task input for create operation
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
            required:
              - title
              - description

  responses:
    HealthCheck:
      description: OK
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                example: "OK"

    User:
      description: Successful response with user data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'

    UserList:
      description: Successful response with list of users
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'

    UserCreated:
      description: User created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'

    Task:
      description: Successful response with task data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'

    TaskList:
      description: Successful response with list of tasks
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Task'

    TaskCreated:
      description: Task created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'

    NoContent:
      description: Successful response with no content
